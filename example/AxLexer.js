// Generated from Ax.g4 by ANTLR 4.9.1
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001b\u008e\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0017\u0003\u0017\u0003\u0018\u0006\u0018|\n\u0018\r\u0018",
    "\u000e\u0018}\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0007\u001b\u0088\n\u001b",
    "\f\u001b\u000e\u001b\u008b\u000b\u001b\u0003\u001b\u0003\u001b\u0002",
    "\u0002\u001c\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007",
    "\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f",
    "\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017",
    "-\u0002/\u00181\u00193\u001a5\u001b\u0003\u0002\u0006\u0004\u0002C\\",
    "c|\u0003\u00022;\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003\u0002\f\f",
    "\u0002\u008e\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002",
    "\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002",
    "\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002",
    "\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002",
    "\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002",
    "\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002",
    "\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002",
    "\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002",
    "\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002",
    "\u0002+\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002\u0002",
    "1\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003",
    "\u0002\u0002\u0002\u00037\u0003\u0002\u0002\u0002\u00059\u0003\u0002",
    "\u0002\u0002\u0007;\u0003\u0002\u0002\u0002\t=\u0003\u0002\u0002\u0002",
    "\u000b?\u0003\u0002\u0002\u0002\rA\u0003\u0002\u0002\u0002\u000fD\u0003",
    "\u0002\u0002\u0002\u0011N\u0003\u0002\u0002\u0002\u0013Q\u0003\u0002",
    "\u0002\u0002\u0015U\u0003\u0002\u0002\u0002\u0017X\u0003\u0002\u0002",
    "\u0002\u0019Z\u0003\u0002\u0002\u0002\u001b]\u0003\u0002\u0002\u0002",
    "\u001d_\u0003\u0002\u0002\u0002\u001fb\u0003\u0002\u0002\u0002!d\u0003",
    "\u0002\u0002\u0002#f\u0003\u0002\u0002\u0002%h\u0003\u0002\u0002\u0002",
    "\'j\u0003\u0002\u0002\u0002)l\u0003\u0002\u0002\u0002+n\u0003\u0002",
    "\u0002\u0002-x\u0003\u0002\u0002\u0002/{\u0003\u0002\u0002\u00021\u007f",
    "\u0003\u0002\u0002\u00023\u0081\u0003\u0002\u0002\u00025\u0085\u0003",
    "\u0002\u0002\u000278\u0007?\u0002\u00028\u0004\u0003\u0002\u0002\u0002",
    "9:\u0007*\u0002\u0002:\u0006\u0003\u0002\u0002\u0002;<\u0007.\u0002",
    "\u0002<\b\u0003\u0002\u0002\u0002=>\u0007+\u0002\u0002>\n\u0003\u0002",
    "\u0002\u0002?@\u0007~\u0002\u0002@\f\u0003\u0002\u0002\u0002AB\u0007",
    "k\u0002\u0002BC\u0007h\u0002\u0002C\u000e\u0003\u0002\u0002\u0002DE",
    "\u0007q\u0002\u0002EF\u0007v\u0002\u0002FG\u0007j\u0002\u0002GH\u0007",
    "g\u0002\u0002HI\u0007t\u0002\u0002IJ\u0007y\u0002\u0002JK\u0007k\u0002",
    "\u0002KL\u0007u\u0002\u0002LM\u0007g\u0002\u0002M\u0010\u0003\u0002",
    "\u0002\u0002NO\u0007q\u0002\u0002OP\u0007t\u0002\u0002P\u0012\u0003",
    "\u0002\u0002\u0002QR\u0007c\u0002\u0002RS\u0007p\u0002\u0002ST\u0007",
    "f\u0002\u0002T\u0014\u0003\u0002\u0002\u0002UV\u00071\u0002\u0002VW",
    "\u0007?\u0002\u0002W\u0016\u0003\u0002\u0002\u0002XY\u0007>\u0002\u0002",
    "Y\u0018\u0003\u0002\u0002\u0002Z[\u0007>\u0002\u0002[\\\u0007?\u0002",
    "\u0002\\\u001a\u0003\u0002\u0002\u0002]^\u0007@\u0002\u0002^\u001c\u0003",
    "\u0002\u0002\u0002_`\u0007@\u0002\u0002`a\u0007?\u0002\u0002a\u001e",
    "\u0003\u0002\u0002\u0002bc\u0007,\u0002\u0002c \u0003\u0002\u0002\u0002",
    "de\u00071\u0002\u0002e\"\u0003\u0002\u0002\u0002fg\u0007-\u0002\u0002",
    "g$\u0003\u0002\u0002\u0002hi\u0007/\u0002\u0002i&\u0003\u0002\u0002",
    "\u0002jk\u0007]\u0002\u0002k(\u0003\u0002\u0002\u0002lm\u0007_\u0002",
    "\u0002m*\u0003\u0002\u0002\u0002no\u0007w\u0002\u0002op\u0007p\u0002",
    "\u0002pq\u0007f\u0002\u0002qr\u0007g\u0002\u0002rs\u0007h\u0002\u0002",
    "st\u0007k\u0002\u0002tu\u0007p\u0002\u0002uv\u0007g\u0002\u0002vw\u0007",
    "f\u0002\u0002w,\u0003\u0002\u0002\u0002xy\t\u0002\u0002\u0002y.\u0003",
    "\u0002\u0002\u0002z|\u0005-\u0017\u0002{z\u0003\u0002\u0002\u0002|}",
    "\u0003\u0002\u0002\u0002}{\u0003\u0002\u0002\u0002}~\u0003\u0002\u0002",
    "\u0002~0\u0003\u0002\u0002\u0002\u007f\u0080\t\u0003\u0002\u0002\u0080",
    "2\u0003\u0002\u0002\u0002\u0081\u0082\t\u0004\u0002\u0002\u0082\u0083",
    "\u0003\u0002\u0002\u0002\u0083\u0084\b\u001a\u0002\u0002\u00844\u0003",
    "\u0002\u0002\u0002\u0085\u0089\u0007%\u0002\u0002\u0086\u0088\n\u0005",
    "\u0002\u0002\u0087\u0086\u0003\u0002\u0002\u0002\u0088\u008b\u0003\u0002",
    "\u0002\u0002\u0089\u0087\u0003\u0002\u0002\u0002\u0089\u008a\u0003\u0002",
    "\u0002\u0002\u008a\u008c\u0003\u0002\u0002\u0002\u008b\u0089\u0003\u0002",
    "\u0002\u0002\u008c\u008d\b\u001b\u0002\u0002\u008d6\u0003\u0002\u0002",
    "\u0002\u0005\u0002}\u0089\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AxLexer extends antlr4.Lexer {

    static grammarFileName = "Ax.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "'('", "','", "')'", "'|'", "'if'", 
                         "'otherwise'", "'or'", "'and'", "'/='", "'<'", 
                         "'<='", "'>'", "'>='", "'*'", "'/'", "'+'", "'-'", 
                         "'['", "']'", "'undefined'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "UNDEFINED", "WORD", 
                          "DIGIT", "WS", "COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "UNDEFINED", "CHAR", "WORD", "DIGIT", "WS", 
                      "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

AxLexer.EOF = antlr4.Token.EOF;
AxLexer.T__0 = 1;
AxLexer.T__1 = 2;
AxLexer.T__2 = 3;
AxLexer.T__3 = 4;
AxLexer.T__4 = 5;
AxLexer.T__5 = 6;
AxLexer.T__6 = 7;
AxLexer.T__7 = 8;
AxLexer.T__8 = 9;
AxLexer.T__9 = 10;
AxLexer.T__10 = 11;
AxLexer.T__11 = 12;
AxLexer.T__12 = 13;
AxLexer.T__13 = 14;
AxLexer.T__14 = 15;
AxLexer.T__15 = 16;
AxLexer.T__16 = 17;
AxLexer.T__17 = 18;
AxLexer.T__18 = 19;
AxLexer.T__19 = 20;
AxLexer.UNDEFINED = 21;
AxLexer.WORD = 22;
AxLexer.DIGIT = 23;
AxLexer.WS = 24;
AxLexer.COMMENT = 25;



