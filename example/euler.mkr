# Makar mods for Project Euler problems!

:Evens->&Z = { n in Z : exists( k in Z : n = 2 * k ) }

positiveEvensUnder10->&N = { n in N : n in Evens, n < 10 }

# Project Euler 1:
#[
If we list all the natural numbers below 10 that are multiples of 3 or 5,
we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
]#

import number

[
  m(n in N)->&N = { m in N : m mod 3 = 0 or m mod 5 = 0 }
  :answer1->N = sum( m(1000) )
]

# PE 3:
#[
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?
]#

[
  factors( n in N )->&N = { f in N : n mod f = 0 }
  relprimes( xs in &N )->&N = { x in xs :
    x mod s /= 0,
    s in (xs - x)
  }
  primefactors( n in N )->&N = relprimes( factors(n) )
  :answer3->N = max( primefactors( 600851475143 ) )
]

# export a symbol
:answer = answer1 + answer3


#PE4:
#[
A palindromic number reads the same both ways.
The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
Find the largest palindrome made from the product of two 3-digit numbers.
]#

[
	ndig( n in N )->N  = max( { m in N : 10^m < n } )
	dig( n in N, d in N )->N =
	  | undefined if d > ndig(n)
		| n mod 10 if d = 1
		| ( n mod 10^d - n mod 10^(d-1) ) / 10^(d-1) otherwise
	palindrome( n in N )->B =
		| true if
				dig( n, i ) = dig( n, len-(i-1) ) for all i where
				i in N,
				i < len/2,
				len = ndig( n )
		| false otherwise
	:answer4->N = max({ n in N :
			palindrome(n) and
			n = p * q where
			ndig(p) = 3, ndig(q) = 3,
			p in N, q in N
		})
]
